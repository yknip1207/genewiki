/**
 * 
 */
package org.genewiki.stream;

import static com.rosaloves.bitlyj.Bitly.as;
import static com.rosaloves.bitlyj.Bitly.shorten;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.genewiki.GeneWikiLink;
import org.genewiki.GeneWikiPage;
import org.genewiki.Heading;
import org.genewiki.Reference;
import org.genewiki.Sentence;
import org.genewiki.metrics.RevisionCounter;
import org.scripps.nlp.ncbo.web.AnnotatorClient;
import org.scripps.nlp.ncbo.web.NcboAnnotation;
import org.scripps.util.TextFun;

import com.rosaloves.bitlyj.Url;

/**
 * @author bgood
 *
 */
public class Tweetables {
	List<Tweetable> tweets;
	String summaryForRSS;

	/**
	 * Given two genewikipage's (revisions for the same article) emit a compressed summary of the meaningful changes that they contain
	 * @param p_t0
	 * @param p_t1
	 */
	public Tweetables(GeneWikiPage p_t0, GeneWikiPage p_t1, RevisionCounter rc){
		//for change summarization attempt using NCBO annotator...
		boolean useGO = true; boolean useDO = true; boolean useFMA = true; boolean usePRO = true; boolean useOMIM = false; boolean useDrug = true;

		tweets = new ArrayList<Tweetable>();
		Tweetable base = new Tweetable(p_t0, p_t1);
		if(base.user.toLowerCase().contains("bot")){
			return;
		}
		summaryForRSS = " The article on <a href=\"http://en.wikipedia.org/wiki/"+base.getHashtag().substring(1)+"\">"+base.getHashtag().substring(1)+"</a> ";
		//reference tweet
		if(base.references>0&&p_t0.getRefs()!=null&&p_t0.getRefs().size()>0){
			String summary = "";
			if(base.references==1){
				Reference ref = p_t0.getRefs().get(0);
				summary += base.user+" added a reference to "+base.hashtag;
				if(ref.getPmid()!=null){
					String link = "http://www.ncbi.nlm.nih.gov/pubmed/"+ref.getPmid();
					summary += " "+link;
				}
			}else{
				summary += base.user+" added "+base.references+" refs to "+base.hashtag+", PMIDS: ";

				summaryForRSS += "grew by "+base.references+" refs. PMIDS: ";
				List<String> pmid0 = new ArrayList<String>();
				for(Reference ref : p_t0.getRefs()){
					if(ref.getPmid()!=null){
						pmid0.add(ref.getPmid());
					}
				}
				Set<String> newones = new HashSet<String>();
				for(Reference ref : p_t1.getRefs()){
					if(ref.getPmid()!=null){
						if(!pmid0.contains(ref.getPmid())&&newones.add(ref.getPmid())){
							if((summary.length()+ref.getPmid().length())>115){
								summary = summary.substring(0,summary.length()-1);
								summary+="..";
								break;
							}
							summary += ref.getPmid()+",";
							//							Url url = as(shorty.user, shorty.key).call(shorten("http://www.ncbi.nlm.nih.gov/pubmed/"+ref.getPmid()+"\""));
							//							String shorter = url.getShortUrl();
							summaryForRSS += "<a href=\"http://www.ncbi.nlm.nih.gov/pubmed/"+ref.getPmid()+"\">"+ref.getPmid()+"</a>,"; 
						}
					}
				}
				if(summary.endsWith(","))summary = summary.substring(0,summary.length()-1);
			}

			Tweetable tweet = new Tweetable(base);
			tweet.setSummary(summary);
			tweets.add(tweet);		
		}
		//BogHog tweet - removing PBB_Summary 
		if(p_t0.getPageContent().contains("PBB_Summary")&&!p_t1.getPageContent().contains("PBB_Summary")){
			Tweetable tweet = new Tweetable(base);
			tweet.setSummary(base.user+" removed the autogenerated text summary from "+base.hashtag);
			tweets.add(tweet);	
		}
		//likely vandal removing PBB template {{PBB|geneid=7434}}
		if(p_t0.getPageContent().contains("{{PBB|geneid="+p_t0.getNcbi_gene_id())&&!p_t1.getPageContent().contains("{{PBB|geneid="+p_t1.getNcbi_gene_id())){
			Tweetable tweet = new Tweetable(base);
			tweet.setSummary(base.user+" removed the autogenerated infobox from "+base.hashtag);
			tweets.add(tweet);	
		}
		//media tweet
		if(base.media>0){
			String summary = "";
			summary += base.user+" added "+base.media+" new media files to "+base.hashtag;
			summaryForRSS += " was enhanced with "+base.media+" new media files, ";

			Tweetable tweet = new Tweetable(base);
			tweet.setSummary(summary);
			tweets.add(tweet);	
		}
		//headings tweet
		if(base.headings>0){
			String summary = "";
			summary += base.user+" added "+base.headings+" new headings to "+base.hashtag+" - ";
			summaryForRSS += "gained a new section on ";
			List<String> head = new ArrayList<String>();
			for(Heading h : p_t0.getHeadings()){
				if(h.getPrettyText()!=null){
					head.add(h.getPrettyText());
				}
			}
			for(Heading h : p_t1.getHeadings()){
				if(h.getPrettyText()!=null){
					if(!head.contains(h.getPrettyText())){
						summary+=h.getPrettyText()+" ";
						summaryForRSS+="'"+h.getPrettyText()+"'";
					}
				}
			}
			summaryForRSS+=", ";
			Tweetable tweet = new Tweetable(base);
			tweet.setSummary(summary);
			tweets.add(tweet);	
		}
		//out links tweet
		if(base.out_links>0){
			Set<String> oldlinks = new HashSet<String>();
			for(GeneWikiLink glink : p_t0.getGlinks()){
				if(glink.getTarget_page()!=null&&glink.getTarget_page().length()>4){
					oldlinks.add(glink.getTarget_page());
				}
			}
			Set<String> newlinks = new HashSet<String>();
			for(GeneWikiLink glink : p_t1.getGlinks()){
				if(glink.getTarget_page()!=null&&glink.getTarget_page().length()>4){
					newlinks.add(glink.getTarget_page());
				}
			}
			newlinks.removeAll(oldlinks);
			if(newlinks!=null&&newlinks.size()>0){
				String summary = "";
				summary+= base.user+" linked "+base.hashtag+" to ";
				summaryForRSS += " was linked to ";
				for(String link : newlinks){
					//make sure there is room for the link
					if((summary.length()+link.length())>115){
						summary+="...";
						break;
					}
					summary+="#"+TextFun.makeHashTagSafe(link)+" ";
					//	summaryForRSS+=link+", "; http://bit.ly/hC19Rl
					summaryForRSS += "<a href=\"http://en.wikipedia.org/wiki/"+link+"\">"+link+"</a>, "; 
				}
				if(summary.endsWith(","))summary = summary.substring(0,summary.length()-1);

				Tweetable tweet = new Tweetable(base);
				tweet.setSummary(summary);
				tweets.add(tweet);	
			}
			//	else{
			//likely added a link somewhere else in the text that was already present
			//ex) http://en.wikipedia.org/wiki/?action=historysubmit&diff=414018948&oldid=414018280
			//		System.err.println("link processing error found for "+base.getDifflink());
			//	}
		}
		if(base.words>0&&base.sentences>0){
			String summary = "";
			summary+= base.user+" added "+base.words+" words to "+base.hashtag+" ";
			Set<String> distinct_no_alpha = new HashSet<String>();
			Set<String> keywords = new HashSet<String>();
			List<String> diffs = rc.getDiffBlocks(p_t1.getRevid(), p_t0.getRevid());
			if(diffs!=null&&diffs.size()>0){
				for(String diff : diffs){
					List<NcboAnnotation> annos = AnnotatorClient.ncboAnnotateText(diff, true, useGO, useDO, useFMA, usePRO, useOMIM, useDrug);
					if(annos!=null){
						for(NcboAnnotation anno : annos){
							if(distinct_no_alpha.add(anno.getConcept().getPreferredName().toLowerCase())){
								keywords.add(anno.getConcept().getPreferredName());
							}
						}
					}
				}
			}

			if(keywords.size()>0){
				summary += "- ";
				for(String keyword : keywords){
					if((summary.length()+keyword.length())>115){
						summary+="...";
						break;
					}else{
						summary += "#"+TextFun.makeHashTagSafe(keyword)+" ";
					}
				}
			}


			Tweetable tweet = new Tweetable(base);
			tweet.setSummary(summary);
			tweets.add(tweet);	

			summaryForRSS += " and added "+base.words+" words.";
		}
		//add comment tweet
		if(base.getUser_comment()!=null){
			String comment = base.getUser_comment().trim();
			if(comment.length()>3){
				String summary = "";
				summary+= base.user+" edited "+base.hashtag+" : "+base.getUser_comment();
				//filter out un-interesting, repeated bits
				summary = summary.replaceAll("\\[\\[Project:AWB\\|AWB\\]\\] \\(\\d+\\)", "http://bit.ly/WP_AWB");
				//	summary = summary.replaceAll("\\[\\[Special:Contributions\\/.\\{1,14\\}\\|.\\{1,14\\}\\]\\]", "");

				//links with names
				String regx = "\\[\\[.{1,40}\\|.{1,20}\\]\\]"; //\\|.\\{1,20\\}\\]\\]
				Pattern pattern = 
					Pattern.compile(regx);
				Matcher matcher = 
					pattern.matcher(summary);
				while (matcher.find()) {
					String  block = matcher.group().trim();
					String newblock = block.replaceAll("\\[\\[.{1,40}\\|","");
					newblock = newblock.substring(0, newblock.length()-2);
					if(newblock.equals("talk")){
						newblock = "";
					}else if(newblock.equals("HG")){
						newblock = "http://bit.ly/WP_HG";
					}
					summary = summary.replace(block, newblock);
				}
				summary = summary.replaceAll("()","");

				//trim any excess
				if(summary.length()>119){
					summary = summary.substring(0,116)+"...";
				}				
				Tweetable tweet = new Tweetable(base);				
				tweet.setSummary(summary);
				tweets.add(tweet);	
				summaryForRSS += " and added "+base.bytes+" bytes.";
			}
		}
		//default to bytes tweet
		//turning this off.. we are getting plenty without it
//		if(tweets.size()==0&&base.bytes!=0){
//			String summary = "";
//			summary+= base.user+" edited "+base.hashtag+" ";
//			if(base.bytes>0){
//				summary += "adding "+base.bytes+" bytes.";
//			}else{
//				summary += "deleting "+(-1*base.bytes)+" bytes.";
//			}
//			Tweetable tweet = new Tweetable(base);
//			tweet.setSummary(summary);
//			tweets.add(tweet);	
//			summaryForRSS += " and added "+base.bytes+" bytes.";
//		}



	}

	public List<Tweetable> getTweets() {
		return tweets;
	}

	public void setTweets(List<Tweetable> tweets) {
		this.tweets = tweets;
	}

	public String getSummaryForRSS() {
		return summaryForRSS;
	}

	public void setSummaryForRSS(String summaryForRSS) {
		this.summaryForRSS = summaryForRSS;
	}
}
